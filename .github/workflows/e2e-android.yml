name: Android e2e
on: push

defaults:
  run:
    shell: 'bash'

jobs:
  e2e-tests-android:
    name: '[Placeholder] Running e2e android tests'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Install Linux Dependency
        run: sudo apt-get update && sudo apt-get install -y libpulse0

      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version-file: .java-version
          cache: gradle

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Restore node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: 'node_modules'
          key: node-modules-${{ runner.os }}-${{ hashFiles('.nvmrc') }}-${{ hashFiles('yarn.lock') }}

      - name: Install packages if cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile

      - name: Install tools
        run: |
          SDKMANAGER=${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager
          echo "y" | ${SDKMANAGER} "tools"
          echo "y" | ${SDKMANAGER} "system-images;android-33;google_apis;x86_64"
          ${SDKMANAGER} --list_installed | grep "system-images;android-33;google_apis;x86_64" || exit 1

      - name: Get device name
        id: device
        run: node -e "console.log('AVD_NAME=' + require('./.detoxrc').devices.emulator.device.avdName)" >> $GITHUB_OUTPUT

      - name: Create avd
        run: |
          AVDMANAGER=${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/avdmanager
          ${AVDMANAGER} list avd
          ${AVDMANAGER} list device
          ${ANDROID_SDK_ROOT}/emulator/emulator -list-avds
          echo "no" | ${AVDMANAGER} create avd -n ${{steps.device.outputs.AVD_NAME}} -k "system-images;android-33;google_apis;x86_64" -d "pixel_6"

      - name: Start emulator
        run: |
          ${ANDROID_SDK_ROOT}/emulator/emulator -list-avds
          echo "no" | ${ANDROID_SDK_ROOT}/emulator/emulator -avd ${{ steps.device.outputs.AVD_NAME }} -no-audio -no-window &
          ${ANDROID_SDK_ROOT}/platform-tools/adb wait-for-device

      - name: Detox build
        run: |
          chmod +x ./android/gradlew
          yarn detox build --configuration android.emu.release
      - name: run detox test
        run: |
          yarn detox test --configuration android.emu.release --headless

      # - name: Build Detox for Android Emulator
      #   run: detox build --configuration android.emu.release

      # - name: Run Detox tests for Android Emulator
      #   run: detox test --configuration android.emu.release --cleanup
